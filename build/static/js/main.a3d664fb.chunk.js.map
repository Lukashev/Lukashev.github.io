{"version":3,"sources":["images/product.png","images/heart.svg","images/basket.svg","store/mock.ts","store/reducer.ts","components/InfoPanel/index.ts","components/InfoPanel/InfoPanel.tsx","components/Typography/Typography.tsx","components/Typography/index.ts","components/Button/Button.tsx","components/Button/index.ts","components/Product/Product.tsx","components/Product/index.ts","components/AppMain.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","productList","id","img","productImgPath","title","rating","price","discount","color","material","sizes","mechanism","seller","canAddFavorite","ContextApp","React","createContext","initialState","concat","loadedProducts","productLabelList","reducer","state","action","type","payload","InfoPanel","props","list","className","map","item","i","key","Typography","fontSize","size","fontFamily","fontWeight","children","textDecoration","style","defaultProps","Button","backgroundColor","borderRadius","border","width","ProductRating","value","name","ProductPrice","hasDiscount","ProductSimpleItem","Object","values","ProductSeller","href","ProductActions","src","heartSVG","alt","basketSVG","Product","memo","product","setList","useCallback","starCount","editing","AppMain","ref","createRef","useContext","dispatch","useState","loadMore","setLoadMore","onScroll","e","target","scrollWidth","scrollLeft","clientWidth","useEffect","getData","current","addEventListener","window","removeEventListener","load","slice","length","labelList","label","productItem","App","useReducer","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a3d664fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/product.f6e9a6f8.png\";","module.exports = __webpack_public_path__ + \"static/media/heart.8b0126c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/basket.afea6c1e.svg\";","import productImgPath from '../images/product.png'\r\nimport { Product } from '../interfaces/Product'\r\n\r\nexport const productList: Product[] = [\r\n    {\r\n        id: 1,\r\n        img: productImgPath,\r\n        title: 'Тумба прикроватная Rubus с двумя ящиками',\r\n        rating: 4.8,\r\n        price: 67736,\r\n        discount: 20,\r\n        color: 'Чёрный',\r\n        material: 'Ткань',\r\n        sizes: 'ш. 349 х в. 234 х г. 323',\r\n        mechanism: 'Французская раскладушка',\r\n        seller: 'Огого',\r\n        canAddFavorite: true\r\n    },\r\n    {\r\n        id: 2,\r\n        img: productImgPath,\r\n        title: 'Тумба прикроватная Rubus с двумя ящиками',\r\n        rating: 3.5,\r\n        price: 56720,\r\n        discount: 0,\r\n        color: 'Чёрный',\r\n        material: 'Ткань',\r\n        sizes: 'ш. 349 х в. 234 х г. 323',\r\n        mechanism: 'Французская раскладушка',\r\n        seller: 'Laska Family',\r\n        canAddFavorite: true\r\n    },\r\n    {\r\n        id: 3,\r\n        img: productImgPath,\r\n        title: 'Тумба прикроватная Rubus с двумя ящиками',\r\n        rating: 4.8,\r\n        price: 67736,\r\n        discount: 20,\r\n        color: 'Чёрный',\r\n        material: 'Ткань',\r\n        sizes: 'ш. 349 х в. 234 х г. 323',\r\n        mechanism: 'Французская раскладушка',\r\n        seller: 'Garda',\r\n        canAddFavorite: false\r\n    },\r\n    {\r\n        id: 4,\r\n        img: productImgPath,\r\n        title: 'Тумба прикроватная Rubus с двумя ящиками',\r\n        rating: 4.8,\r\n        price: 37736,\r\n        discount: 20,\r\n        color: 'Чёрный',\r\n        material: 'Ткань',\r\n        sizes: 'ш. 349 х в. 234 х г. 323',\r\n        mechanism: 'Французская раскладушка',\r\n        seller: 'DG Home',\r\n        canAddFavorite: true\r\n    },\r\n    {\r\n        id: 5,\r\n        img: productImgPath,\r\n        title: 'Тумба прикроватная Rubus с двумя ящиками',\r\n        rating: 4.8,\r\n        price: 42564,\r\n        discount: 0,\r\n        color: 'Чёрный',\r\n        material: 'Ткань',\r\n        sizes: 'ш. 349 х в. 234 х г. 323',\r\n        mechanism: 'Французская раскладушка',\r\n        seller: 'Laska Family',\r\n        canAddFavorite: true\r\n    },\r\n    {\r\n        id: 6,\r\n        img: productImgPath,\r\n        title: 'Тумба прикроватная Rubus с двумя ящиками',\r\n        rating: 4.8,\r\n        price: 67736,\r\n        discount: 20,\r\n        color: 'Чёрный',\r\n        material: 'Ткань',\r\n        sizes: 'ш. 349 х в. 234 х г. 323',\r\n        mechanism: 'Французская раскладушка',\r\n        seller: 'DG Home',\r\n        canAddFavorite: true\r\n    }\r\n]\r\n\r\nexport const productLabelList = [\r\n    'Рейтинг',\r\n    'Цена',\r\n    'Цвет',\r\n    'Материал',\r\n    'Размеры',\r\n    'Механизм',\r\n    'Продавец'\r\n]","import React from \"react\"\r\nimport { StoreState } from \"../interfaces/StoreState\";\r\nimport { StoreAction } from \"./actions\";\r\nimport { productList, productLabelList } from \"./mock\";\r\n\r\nexport const ContextApp = React.createContext({});\r\n\r\nexport const initialState: StoreState = {\r\n    productList: productList.concat(productList),\r\n    loadedProducts: [],\r\n    productLabelList,\r\n};\r\n\r\nexport const reducer = (state: StoreState, action: StoreAction): StoreState => {\r\n    /* it's not necessary, just for example */\r\n    switch (action.type) {\r\n        case 'SET_LOADED_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                loadedProducts: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","import { InfoPanel } from \"./InfoPanel\"\r\n\r\nexport default InfoPanel","import React from 'react'\r\nimport './styles.scss'\r\n\r\ninterface Props {\r\n    list?: JSX.Element[]\r\n}\r\n\r\nexport const InfoPanel = (props: Props) => {\r\n    const { list = [] } = props\r\n    return (\r\n        <div className='info-panel'>\r\n            {list.map((item: JSX.Element, i: number) => {\r\n                return (\r\n                    <div className='info-panel__item' key={i}>\r\n                        {item}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\ntype FontFamily = 'Montserrat' | 'Proxima'\r\ntype TextDecoration = 'blink' | 'line-through' | 'overline' | 'underline' | 'none' | 'inherit'\r\ninterface Props {\r\n    size?: number\r\n    fontFamily?: FontFamily\r\n    fontWeight?: number\r\n    color?: string\r\n    children: string | number | boolean\r\n    textDecoration: TextDecoration\r\n}\r\n\r\nconst Typography = (props: Props) => {\r\n    const {\r\n        size: fontSize,\r\n        fontFamily,\r\n        fontWeight,\r\n        color,\r\n        children,\r\n        textDecoration\r\n    } = props\r\n    return (\r\n        <span style={{ fontFamily, fontSize, color, fontWeight, textDecoration }}>\r\n            {children}\r\n        </span>\r\n    )\r\n}\r\n\r\nTypography.defaultProps = {\r\n    size: 12,\r\n    fontFamily: 'Montserrat',\r\n    fontWeight: 500,\r\n    textDecoration: 'none',\r\n    color: '#000000',\r\n    children: ''\r\n}\r\n\r\nexport default Typography\r\n","import Typography from \"./Typography\";\r\n\r\nexport default Typography","import React from 'react'\r\nimport './styles.scss'\r\n\r\ninterface Props {\r\n    backgroundColor?: string\r\n    borderRadius?: number\r\n    border?: string\r\n    children: JSX.Element | string\r\n    width?: number | string\r\n}\r\n\r\nconst Button = (props: Props) => {\r\n    const { children } = props\r\n    return (\r\n        <button className='button' style={props}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    backgroundColor: 'transparent',\r\n    borderRadius: 4,\r\n    border: 'none',\r\n    width: '100%'\r\n}\r\n\r\nexport default Button\r\n","import Button from \"./Button\";\r\n\r\nexport default Button","import React, { memo, useCallback, Fragment } from 'react'\r\nimport { Product as ProductItem, Seller } from '../../interfaces/Product'\r\nimport StarRatingComponent from 'react-star-rating-component'\r\nimport Typography from '../Typography'\r\nimport InfoPanel from '../InfoPanel'\r\nimport Button from '../Button'\r\n/* import heart, basket svg */\r\nimport heartSVG from '../../images/heart.svg'\r\nimport basketSVG from '../../images/basket.svg'\r\nimport './styles.scss'\r\n\r\ninterface Props {\r\n    product: ProductItem\r\n}\r\n\r\nconst ProductRating = (props: { starCount: number, value: number, editing: boolean }): JSX.Element => {\r\n    const { value } = props\r\n    return (\r\n        <div className=\"product-item__rating\">\r\n            <StarRatingComponent name='product_rating' {...props} />\r\n            <Typography fontWeight={600} size={15}>\r\n                {value}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProductPrice = (props: Partial<ProductItem>): JSX.Element => {\r\n    const { price = 0, discount = 0 } = props\r\n    const hasDiscount = discount > 0\r\n    return (\r\n        <div className=\"product-item__price\" >\r\n            <Typography\r\n                size={18}\r\n                fontWeight={600}\r\n                color={hasDiscount ? '#CC0000' : '#000000'}\r\n            >\r\n                {`${hasDiscount ? price - price * discount / 100 : price} P`}\r\n            </Typography>\r\n            {hasDiscount && (\r\n                <Typography size={15} color={`#948F88`} textDecoration={'line-through'}>\r\n                    {`${price} P`}\r\n                </Typography>\r\n            )}\r\n        </div >\r\n    )\r\n}\r\n\r\nconst ProductSimpleItem = (props: Partial<ProductItem>): JSX.Element => {\r\n    return <Typography>{Object.values(props)[0]}</Typography>\r\n}\r\n\r\nconst ProductSeller = (props: { seller: Seller }): JSX.Element => {\r\n    const { seller } = props\r\n    return (\r\n        <a href='/' className='product-item__link'>\r\n            <Typography>\r\n                {seller}\r\n            </Typography>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst ProductActions = (props: { canAddFavorite: boolean }): JSX.Element => {\r\n    const { canAddFavorite } = props\r\n    return (\r\n        <div className=\"product-item__actions\">\r\n            {canAddFavorite && <Button\r\n                width={51}\r\n                border={`2px solid #FF9F9F`}\r\n            >\r\n                <img src={heartSVG} alt=\"heart_svg\" />\r\n            </Button>}\r\n            <Button width={canAddFavorite ? 117 : '100%'} backgroundColor={`#009900`}>\r\n                <Fragment>\r\n                    <img\r\n                        src={basketSVG}\r\n                        alt=\"basket_svg\"\r\n                        className=\"product-item__actions__basket-svg\"\r\n                    />\r\n                    <Typography color={`#FFFFFF`}>\r\n                        {`Купить`}\r\n                    </Typography>\r\n                </Fragment>\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Product = memo((props: Props) => {\r\n    const {\r\n        product: {\r\n            img,\r\n            title,\r\n            rating = 0,\r\n            color,\r\n            material,\r\n            sizes,\r\n            mechanism,\r\n            canAddFavorite,\r\n            seller = 'Garda'\r\n        }\r\n    } = props\r\n    const setList = useCallback(\r\n        () => {\r\n            return [\r\n                <ProductRating starCount={5} value={rating} editing={false} />,\r\n                <ProductPrice {...props.product} />,\r\n            ]\r\n                .concat([{ color }, { material }, { sizes }, { mechanism }].map(value => <ProductSimpleItem {...value} />))\r\n                .concat(<ProductSeller seller={seller} />)\r\n                .concat(<ProductActions canAddFavorite={canAddFavorite} />)\r\n        }, [])\r\n    return (\r\n        <div className='product-item'>\r\n            <div className=\"product-item__image-block\">\r\n                <img\r\n                    src={img}\r\n                    className='img-responsive'\r\n                    alt='preview' />\r\n            </div>\r\n            <div className=\"product-item__title\">\r\n                <Typography fontWeight={600}>{title}</Typography>\r\n            </div>\r\n            <InfoPanel list={setList()} />\r\n        </div>\r\n    )\r\n})\r\n","import { Product } from \"./Product\";\r\n\r\nexport default Product","import React, { useContext, createRef, RefObject, useEffect, useState } from 'react'\r\nimport { ContextApp } from '../store/reducer'\r\nimport InfoPanel from './InfoPanel'\r\nimport Typography from './Typography'\r\nimport { StoreState } from '../interfaces/StoreState'\r\nimport { Product as ProductItem } from '../interfaces/Product'\r\nimport Product from './Product'\r\n\r\nconst AppMain = (): JSX.Element => {\r\n    const ref: RefObject<HTMLDivElement> = createRef()\r\n    const { state, dispatch } = useContext(ContextApp) as { state: StoreState, dispatch: Function }\r\n    const { productLabelList, productList, loadedProducts } = state\r\n    const [loadMore, setLoadMore] = useState(true);\r\n\r\n    const onScroll = (e: any) => {\r\n        const { target: { scrollWidth, scrollLeft, clientWidth } } = e\r\n        const scrollPosition = scrollWidth - scrollLeft\r\n        if (scrollPosition - 1 < clientWidth) setLoadMore(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(loadMore)\r\n        setLoadMore(false)\r\n    }, [loadMore])\r\n\r\n    useEffect(() => {\r\n        const current = ref.current\r\n        if (current) current.addEventListener('scroll', onScroll)\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", onScroll)\r\n        }\r\n    }, [])\r\n\r\n    const getData = (load: boolean) => {\r\n        /* There can be API call */\r\n        if (load) {\r\n            dispatch({\r\n                type: 'SET_LOADED_PRODUCTS',\r\n                payload: loadedProducts.concat(productList.slice(loadedProducts.length, loadedProducts.length + 4))\r\n            })\r\n            setLoadMore(false)\r\n        }\r\n    }\r\n\r\n    const labelList = productLabelList.map((label: string, i: number) => {\r\n        return (\r\n            <Typography\r\n                key={i}\r\n                size={13}\r\n                fontWeight={600}\r\n            >\r\n                {label}\r\n            </Typography>\r\n        )\r\n    })\r\n    return (\r\n        <div className='app-main'>\r\n            <div className=\"app-main__sidebar\">\r\n                <InfoPanel list={labelList} />\r\n            </div>\r\n            <div className=\"app-main__product-list\" ref={ref}>\r\n                {loadedProducts.map((productItem: ProductItem, i: number) => {\r\n                    return <Product\r\n                        key={i}\r\n                        product={productItem}\r\n                    />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppMain\r\n\r\n","import React, { useReducer } from 'react'\nimport { reducer, initialState, ContextApp } from './store/reducer'\nimport AppMain from './components/AppMain'\n\nconst App = (): JSX.Element => {\n  const [state, dispatch] = useReducer(reducer, initialState) \n  return (\n    <ContextApp.Provider value={{ dispatch, state }}>\n      <AppMain />\n    </ContextApp.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}